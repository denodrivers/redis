name: CI

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

env:
  # TODO: Remove `DENO_FUTURE=1` once lockfile v4 is stabilized
  # https://github.com/denoland/deno/pull/25059
  DENO_FUTURE: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        redis: [6.2, 7.4, 8.0]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Get Deno version
        run: |
          echo "DENO_VERSION=$(cat .denov)" >> $GITHUB_ENV
      - name: Set up Deno ${{ env.DENO_VERSION }}
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: ${{ env.DENO_VERSION }}
          cache: true
          cache-hash: ${{ hashFiles('.denov', 'deno.lock') }}
      - name: Set up Redis ${{ matrix.redis }}
        uses: shogo82148/actions-setup-redis@9a8dac39c47c06261f10f5236e87bfda3fc525d2 # v1.42.0
        with:
          redis-version: ${{ matrix.redis }}
          auto-start: "true"
      - name: Run tests
        run: |
          deno task test
        env:
          REDIS_VERSION: ${{ matrix.redis }}
      - name: Run doc tests
        run: |
          deno task test:doc
      - uses: k1LoW/octocov-action@73d561f65d59e66899ed5c87e4621a913b5d5c20 # v1.5.0
        if: ${{ github.event_name == 'pull_request' }}

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Get Deno version
        run: |
          echo "DENO_VERSION=$(cat .denov)" >> $GITHUB_ENV
      - name: Set up Deno ${{ env.DENO_VERSION }}
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: ${{ env.DENO_VERSION }}
          cache: true
          cache-hash: ${{ hashFiles('.denov', 'deno.lock') }}
      - name: Run linters
        run: |
          deno task check
      - name: deno publish --dry-run
        run:
          deno publish --dry-run

  benchmark:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        redis: [7.4]
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Get Deno version
        run: |
          echo "DENO_VERSION=$(cat .denov)" >> $GITHUB_ENV
      - name: Set up Deno ${{ env.DENO_VERSION }}
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb # v2.0.3
        with:
          deno-version: ${{ env.DENO_VERSION }}
          cache: true
          cache-hash: ${{ hashFiles('.denov', 'deno.lock') }}
      - name: Set up Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: "16"
      - uses: bahmutov/npm-install@4488656f8e90d3c85e3a964db0018dd624f340e7 # v1.11.1
        with:
          working-directory: benchmark
      - name: Set up Redis ${{ matrix.redis }}
        uses: shogo82148/actions-setup-redis@9a8dac39c47c06261f10f5236e87bfda3fc525d2 # v1.42.0
        with:
          redis-version: ${{ matrix.redis }}
          auto-start: "true"
      - name: Run benchmarks (ioredis)
        run: |
          deno task bench:ioredis
      - name: Run benchmarks (deno-redis)
        run: |
          deno task bench:deno-redis
      - name: Output results as a job summary
        run: |
          deno run --allow-read=tmp tools/format-benchmark-results.js >> $GITHUB_STEP_SUMMARY
